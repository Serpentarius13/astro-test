name: Deploy Astro site to Pages

on:
  push:
    branches: [master]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: true

env:
  BUILD_PATH: "." # default value when not using subfolders
  # BUILD_PATH: subfolder

jobs:
  build:
    environment:
      name: github-pages
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v2
        with:
          version: 9.4.0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: pnpm
          cache-dependency-path: pnpm-lock.yaml

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        working-directory: ${{ env.BUILD_PATH }}

      - name: check
        run: echo "${{ vars.PUBLIC_ENV_VARIABLE }}"

      - name: Build with Astro
        run: |
          pnpm build \
            --site "${{ steps.pages.outputs.origin }}" \
            --base "${{ steps.pages.outputs.base_path }}"
        working-directory: ${{ env.BUILD_PATH }}
        env:
          PUBLIC_ENV_VARIABLE: ${{ vars.PUBLIC_ENV_VARIABLE }}

      - name: Upload build
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.BUILD_PATH }}-build
          path: ${{ env.BUILD_PATH }}/dist
          if-no-files-found: error
          retention-days: 1

  deploy:
    environment:
      name: github-pages
      # url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    name: Deploy
    steps:
      - uses: actions/download-artifact@master
        with:
          name: ${{ env.BUILD_PATH }}-build
          path: ${{ env.BUILD_PATH }}/dist

      - name: Checkout code
        uses: actions/checkout@v1

      - name: Deploy to sandbox via rsync
        uses: trendyminds/github-actions-rsync@master
        with:
          RSYNC_OPTIONS: -avzr --delete
          RSYNC_TARGET: /var/www/dist
          RSYNC_SOURCE: ${{ env.BUILD_PATH }}/dist
        env:
          SSH_PRIVATE_KEY: ${{secrets.SSH_PRIVATE_KEY}}
          SSH_USERNAME: ${{secrets.SSH_USERNAME}}
          SSH_HOSTNAME: ${{secrets.SSH_HOSTNAME}}
      # - name: Deploy to GitHub Pages
      #   id: deployment
      #   uses: actions/deploy-pages@v4
